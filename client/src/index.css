.game-container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
}

.map {
  background-image: url('NewpalletTown.png');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 100%;
  height: 0;
  padding-bottom: 90%;
  position: relative;
}

.character {
  width: 16px;
  height: 16px;
  background-repeat: no-repeat;
  background-size: cover;
  background-color: transparent;
  position: absolute;
  transition: left 0.1s, top 0.1s;
  z-index: 1;
  image-rendering: pixelated;
}

/* Player character styles */
.character:not(.npc-1) {
  background-image: url('character.png');
}

/* NPC styles */
.character.npc-1 {
  background-image: url('image.png');
}

/* Common direction styles for both player and NPC */
.character.facing-down {
  background-position: 0 0;
}

.character.facing-up {
  background-position: 0 -16px;
}

.character.facing-left {
  background-position: 0 -32px;
}

.character.facing-right {
  background-position: 0 -48px;
}

.character.walking {
  animation: walk 0.8s steps(4);
}

@keyframes walk {
  from { background-position-x: 0; }
  to { background-position-x: -64px; }
}

/* Shadow effect for all characters */
.character::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 50%;
  transform: translateX(-50%);
  width: 10px;
  height: 4px;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
}

/* Map transition styles */
.map-transitioning {
  opacity: 0;
}

.character.transitioning {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

.game-map {
  width: 100%;
  height: 100%;
  position: relative;
}

.map-outside {
  background-image: url('NewpalletTown.png');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.map-house {
  background-image: url('House1Interior.png');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.map {
  transition: opacity 0.5s ease-in-out;
}

.character.transitioning {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

/* Optional: Add a fade effect to the whole game container during transition */
.game-container.transitioning {
  background-color: black;
  transition: background-color 0.5s ease-in-out;
}